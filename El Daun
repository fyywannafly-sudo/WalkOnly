-- Services
local HttpService = game:GetService("HttpService")
local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local player = game.Players.LocalPlayer

-- Multi-track URLs
local tracksURLs = {
    ["BC - 1"] = "https://raw.githubusercontent.com/fyywannafly-sudo/WalkOnly/refs/heads/main/DAUN_CP1.json",
    ["CP 1 - CP 2"] = "https://raw.githubusercontent.com/fyywannafly-sudo/WalkOnly/refs/heads/main/DAUN_CP2.json",
    ["CP 2 - CP 3"] = "https://raw.githubusercontent.com/fyywannafly-sudo/WalkOnly/refs/heads/main/DAUN_CP3.json",
    ["CP 3 - CP 4"] = "https://raw.githubusercontent.com/fyywannafly-sudo/WalkOnly/refs/heads/main/DAUN_CP4.json",
    ["CP 4 - SUMMIT"] = "https://raw.githubusercontent.com/fyywannafly-sudo/WalkOnly/refs/heads/main/SUMMIT_DAUN.json",
}

local savedTracks = {}
local orderedTrackNames = {"BC - 1", "CP 1 - CP 2", "CP 2 - CP 3", "CP 3 - CP 4", "CP 4 - SUMMIT"}

-- Load Tracks
for _, name in ipairs(orderedTrackNames) do
    local url = tracksURLs[name]
    local success, data = pcall(function()
        return HttpService:JSONDecode(game:HttpGet(url))
    end)

    if success and data and data.points then
        savedTracks[name] = {}
        for _, p in ipairs(data.points) do
            table.insert(savedTracks[name], Vector3.new(p[1], p[2], p[3]))
        end
        print("Track loaded:", name, "Points:", #savedTracks[name])
    else
        warn("Failed to load track:", name)
        savedTracks[name] = {}
    end
end

-- Variables
local running = false
local speed = 16  -- default speed

-- Resume state variables
local resumeData = {
    trackName = nil,
    trackIndex = 1,
    pointIndex = 1,
    lastFlatDir = Vector3.new(0, 0, 1)
}

local function getHRP()
    local char = player.Character or player.CharacterAdded:Wait()
    return char:WaitForChild("HumanoidRootPart")
end

-- Respawn function
local function respawnPlayer()
    player.Character:BreakJoints()
end

-- GUI Setup
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "MT_Daun"
ScreenGui.Parent = CoreGui

local Frame = Instance.new("Frame", ScreenGui)
Frame.Size = UDim2.new(0, 300, 0, 240) -- Reduced height since we removed individual track buttons
Frame.Position = UDim2.new(0.5, -150, 0.2, 0)
Frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Frame.BackgroundTransparency = 0.3
Instance.new("UICorner", Frame).CornerRadius = UDim.new(0, 8)

local Title = Instance.new("TextLabel", Frame)
Title.Size = UDim2.new(1, 0, 0, 30)
Title.Text = "MT Daun"
Title.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Title.TextColor3 = Color3.fromRGB(180, 180, 180)
Title.TextScaled = true
Instance.new("UICorner", Title).CornerRadius = UDim.new(0, 8)

local speedBox = Instance.new("TextBox", Frame)
speedBox.Size = UDim2.new(0.9, 0, 0, 40)
speedBox.Position = UDim2.new(0.05, 0, 0, 40)
speedBox.PlaceholderText = "Speed (default 16)"
speedBox.Text = tostring(speed)
speedBox.TextColor3 = Color3.fromRGB(180, 180, 180)
speedBox.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
speedBox.TextScaled = true
speedBox.ClearTextOnFocus = false
Instance.new("UICorner", speedBox).CornerRadius = UDim.new(0, 6)

speedBox.FocusLost:Connect(function(enterPressed)
    if enterPressed then
        local val = tonumber(speedBox.Text)
        if val and val > 0 then
            speed = val
        else
            speedBox.Text = tostring(speed)
        end
    end
end)

-- === Auto Summit Loop Button ===
local autoBtn = Instance.new("TextButton", Frame)
autoBtn.Size = UDim2.new(0.9, 0, 0, 40)
autoBtn.Position = UDim2.new(0.05, 0, 0, 90)
autoBtn.Text = "AUTO SUMMIT (Loop)"
autoBtn.BackgroundColor3 = Color3.fromRGB(0, 60, 100)
autoBtn.TextColor3 = Color3.fromRGB(200, 200, 200)
autoBtn.TextScaled = true
Instance.new("UICorner", autoBtn).CornerRadius = UDim.new(0, 6)

autoBtn.MouseButton1Click:Connect(function()
    if running then return end
    running = true
    resumeData.trackName = nil  -- Reset resume data when starting new loop
    
    coroutine.wrap(function()
        while running do
            for idx, name in ipairs(orderedTrackNames) do
                if not running then break end
                print("Playing track:", name)
                resumeData.trackName = name
                resumeData.trackIndex = idx
                resumeData.pointIndex = 1
                playTrack(savedTracks[name], name)
            end
            if running then
                respawnPlayer()
                task.wait(5) -- jeda respawn
            end
        end
        running = false
    end)()
end)

-- BYPASS variables (integrated)
local bypassIsActive = false  -- Default OFF
local bypassConn

-- Setup bypass handler (ke Character)
local function setupBypass(char)
    local humanoid = char:WaitForChild("Humanoid")
    local hrp = char:WaitForChild("HumanoidRootPart")
    local lastPos = hrp.Position

    if bypassConn then bypassConn:Disconnect() end
    bypassConn = RunService.RenderStepped:Connect(function()
        if not hrp or not hrp.Parent then return end

        if bypassIsActive then
            local direction = (hrp.Position - lastPos)
            local dist = direction.Magnitude
            if dist > 0.01 then
                local moveVector = direction.Unit * math.clamp(dist * 5, 0, 1)
                -- gunakan Move agar animasi berjalan
                humanoid:Move(moveVector, false)
            else
                humanoid:Move(Vector3.zero, false)
            end
        end

        lastPos = hrp.Position
    end)
end

player.CharacterAdded:Connect(setupBypass)
if player.Character then setupBypass(player.Character) end

-- BYPASS Button
local animBtn = Instance.new("TextButton", Frame)
animBtn.Size = UDim2.new(0.9, 0, 0, 40)
animBtn.Position = UDim2.new(0.05, 0, 0, 140)
animBtn.Text = "ANIMASI: OFF"  -- Default OFF
animBtn.BackgroundColor3 = Color3.fromRGB(200, 50, 50) -- merah default
animBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
animBtn.TextScaled = true
Instance.new("UICorner", animBtn).CornerRadius = UDim.new(0, 8)

animBtn.MouseButton1Click:Connect(function()
    bypassIsActive = not bypassIsActive
    if bypassIsActive then
        animBtn.Text = "ANIMASI: ON"
        animBtn.BackgroundColor3 = Color3.fromRGB(50, 150, 50) -- hijau
    else
        animBtn.Text = "ANIMASI: OFF"
        animBtn.BackgroundColor3 = Color3.fromRGB(200, 50, 50) -- merah
    end
end)

-- STOP/RESUME Button
local stopResumeBtn = Instance.new("TextButton", Frame)
stopResumeBtn.Size = UDim2.new(0.9, 0, 0, 40)
stopResumeBtn.Position = UDim2.new(0.05, 0, 0, 190)
stopResumeBtn.Text = "STOP"
stopResumeBtn.BackgroundColor3 = Color3.fromRGB(80, 0, 0)
stopResumeBtn.TextColor3 = Color3.fromRGB(180, 180, 180)
stopResumeBtn.TextScaled = true
Instance.new("UICorner", stopResumeBtn).CornerRadius = UDim.new(0, 8)

stopResumeBtn.MouseButton1Click:Connect(function()
    if running then
        -- Stop the current track
        running = false
        stopResumeBtn.Text = "RESUME"
        stopResumeBtn.BackgroundColor3 = Color3.fromRGB(0, 80, 0)
        
        -- Matikan animasi saat stop
        bypassIsActive = false
        animBtn.Text = "ANIMASI: OFF"
        animBtn.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
    else
        -- Resume from where we left off
        if resumeData.trackName then
            running = true
            stopResumeBtn.Text = "STOP"
            stopResumeBtn.BackgroundColor3 = Color3.fromRGB(80, 0, 0)
            
            -- NYALAIN OTOMATIS ANIMASI SAAT RESUME
            bypassIsActive = true
            animBtn.Text = "ANIMASI: ON"
            animBtn.BackgroundColor3 = Color3.fromRGB(50, 150, 50)
            
            coroutine.wrap(function()
                -- Continue from the current track
                for i = resumeData.trackIndex, #orderedTrackNames do
                    if not running then break end
                    
                    local name = orderedTrackNames[i]
                    print("Resuming track:", name)
                    
                    -- If it's the same track we were on, resume from the saved point
                    if i == resumeData.trackIndex then
                        resumeData.trackName = name
                        playTrackFromPoint(savedTracks[name], name, resumeData.pointIndex, resumeData.lastFlatDir)
                    else
                        -- Otherwise start from the beginning of the next track
                        resumeData.trackName = name
                        resumeData.trackIndex = i
                        resumeData.pointIndex = 1
                        playTrack(savedTracks[name], name)
                    end
                end
                
                -- If we finished all tracks and loop is still enabled, restart
                if running then
                    respawnPlayer()
                    task.wait(5)
                    resumeData.trackName = nil
                    if running then
                        -- Restart the auto summit loop
                        coroutine.wrap(autoBtn.MouseButton1Click)()
                    end
                end
            end)()
        end
    end
end)

-- Minimize Button (Fyy Logo)
local closeBtn = Instance.new("TextButton", Frame)
closeBtn.Size = UDim2.new(0, 30, 0, 30)
closeBtn.Position = UDim2.new(1, -35, 0, 0)
closeBtn.Text = "X"
closeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
closeBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
closeBtn.TextScaled = true
Instance.new("UICorner", closeBtn).CornerRadius = UDim.new(1, 0)

closeBtn.MouseButton1Click:Connect(function()
    Frame.Visible = false
    local logoBtn = Instance.new("TextButton", ScreenGui)
    logoBtn.Size = UDim2.new(0, 40, 0, 40)
    logoBtn.Position = UDim2.new(0, 50, 0, 50)
    logoBtn.Text = "Fyy"
    logoBtn.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    logoBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    logoBtn.TextScaled = true
    Instance.new("UICorner", logoBtn).CornerRadius = UDim.new(1, 0)

    logoBtn.MouseButton1Click:Connect(function()
        Frame.Visible = true
        logoBtn:Destroy()
    end)
end)

-- Drag Function
local function setupDrag(target)
    local dragging, dragStart, startPos
    target.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = target.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    target.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            if dragging then
                local delta = input.Position - dragStart
                target.Position = UDim2.new(
                    startPos.X.Scale, startPos.X.Offset + delta.X,
                    startPos.Y.Scale, startPos.Y.Offset + delta.Y
                )
            end
        end
    end)
end
setupDrag(Frame)

-- FUNCTION PLAYTRACK YANG SUDAH DIPERBAIKI --
function playTrack(track, trackName)
    if not track or #track < 2 then 
        print("Track tidak valid atau terlalu pendek")
        return 
    end
    
    local hrp = getHRP()
    local char = player.Character or player.CharacterAdded:Wait()
    local humanoid = char:FindFirstChildOfClass("Humanoid")
    if humanoid then humanoid.AutoRotate = false end

    for i = 2, #track do
        if not running then 
            -- Save the current position for resume
            resumeData.pointIndex = i - 1
            resumeData.lastFlatDir = resumeData.lastFlatDir or Vector3.new(0, 0, 1)
            break 
        end

        local startPos = track[i-1]
        local targetPos = track[i]

        local distance = (targetPos - startPos).Magnitude
        local deltaY = targetPos.Y - startPos.Y

        local duration = distance / speed

        -- bikin vertical jauh lebih cepat
        if math.abs(deltaY) > 5 then
            duration = duration * 0.25   -- sebelumnya 0.35
        elseif math.abs(deltaY) > 2 then
            duration = duration * 0.5    -- sebelumnya 0.6
        end

        local elapsed = 0
        while elapsed < duration and running do
            elapsed += RunService.Heartbeat:Wait()

            local t = math.clamp(elapsed / duration, 0, 1)
            local alpha
            if deltaY > 2 then
                -- naik: cepat banget di awal, lambat di ujung
                alpha = 1 - (1 - t) ^ 3
            elseif deltaY < -2 then
                -- turun: lambat awal, ngebut di bawah
                alpha = t ^ 3
            else
                alpha = t
            end

            local currentPos = startPos:Lerp(targetPos, alpha)

            -- arah tetap kunci ke XZ biar nggak muter aneh
            local direction = Vector3.new(targetPos.X - startPos.X, 0, targetPos.Z - startPos.Z)
            if direction.Magnitude > 0.01 then
                resumeData.lastFlatDir = direction.Unit
            end

            local targetCFrame = CFrame.lookAt(currentPos, currentPos + resumeData.lastFlatDir, Vector3.new(0,1,0))
            hrp.CFrame = targetCFrame
        end
    end

    if humanoid then humanoid.AutoRotate = true end
end

-- Function to play track from a specific point
function playTrackFromPoint(track, trackName, startPointIndex, lastDirection)
    if not track or #track < 2 then 
        print("Track tidak valid atau terlalu pendek")
        return 
    end
    
    local hrp = getHRP()
    local char = player.Character or player.CharacterAdded:Wait()
    local humanoid = char:FindFirstChildOfClass("Humanoid")
    if humanoid then humanoid.AutoRotate = false end

    resumeData.lastFlatDir = lastDirection or Vector3.new(0, 0, 1)

    for i = startPointIndex + 1, #track do
        if not running then 
            -- Save the current position for resume
            resumeData.pointIndex = i - 1
            break 
        end

        local startPos = track[i-1]
        local targetPos = track[i]

        local distance = (targetPos - startPos).Magnitude
        local deltaY = targetPos.Y - startPos.Y

        local duration = distance / speed

        -- bikin vertical jauh lebih cepat
        if math.abs(deltaY) > 5 then
            duration = duration * 0.15   -- sebelumnya 0.35
        elseif math.abs(deltaY) > 2 then
            duration = duration * 0.2    -- sebelumnya 0.6
        end

        local elapsed = 0
        while elapsed < duration and running do
            elapsed += RunService.Heartbeat:Wait()

            local t = math.clamp(elapsed / duration, 0, 1)
            local alpha
            if deltaY > 2 then
                -- naik: cepat banget di awal, lambat di ujung
                alpha = 1 - (1 - t) ^ 3
            elseif deltaY < -2 then
                -- turun: lambat awal, ngebut di bawah
                alpha = t ^ 3
            else
                alpha = t
            end

            local currentPos = startPos:Lerp(targetPos, alpha)

            -- arah tetap kunci ke XZ biar nggak muter aneh
            local direction = Vector3.new(targetPos.X - startPos.X, 0, targetPos.Z - startPos.Z)
            if direction.Magnitude > 0.01 then
                resumeData.lastFlatDir = direction.Unit
            end

            local targetCFrame = CFrame.lookAt(currentPos, currentPos + resumeData.lastFlatDir, Vector3.new(0,1,0))
            hrp.CFrame = targetCFrame
        end
    end

    if humanoid then humanoid.AutoRotate = true end
end
